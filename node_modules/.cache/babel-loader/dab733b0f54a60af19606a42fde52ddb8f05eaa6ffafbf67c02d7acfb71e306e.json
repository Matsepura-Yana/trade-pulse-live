{"ast":null,"code":"import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import'../styles/RegisterPage.css';import ReCAPTCHA from'react-google-recaptcha';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterPage=_ref=>{let{setUser}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[isLoading,setIsLoading]=useState(false);const[captchaVerified,setCaptchaVerified]=useState(false);const navigate=useNavigate();// Функция обработки верификации CAPTCHA\nconst handleCaptchaChange=value=>{if(value)setCaptchaVerified(true);};// Функция для валидации email\nconst validateEmail=email=>{const emailRegex=/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;return emailRegex.test(email);};// Функция для валидации пароля\nconst validatePassword=password=>{const passwordRegex=/^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;return passwordRegex.test(password);};// Обработчик отправки формы\nconst handleSubmit=async e=>{e.preventDefault();setError('');// Сброс ошибки\n// Проверка CAPTCHA\nif(!captchaVerified){setError('Пройдите проверку CAPTCHA');return;}// Валидация email и пароля\nif(!validateEmail(email)){setError('Пожалуйста, введите правильный email');return;}if(!validatePassword(password)){setError('Пароль должен содержать минимум 8 символов, включая заглавную букву, цифру и спец. символ');return;}try{setIsLoading(true);// Получение существующих пользователей\nconst users=JSON.parse(localStorage.getItem('users'))||[];// Проверка существования аккаунта\nconst existingUser=users.find(user=>user.email===email);if(existingUser){setError('Этот email уже зарегестрирован. Войдите в свой аккаунт');return;}// Создание нового пользователя\nconst newUser={id:Date.now(),email,password};users.push(newUser);// Добавление нового пользователя\nlocalStorage.setItem('users',JSON.stringify(users));// Сохранение в localStorage\nsetUser(newUser);// Установка текущего пользователя\nlocalStorage.setItem('currentUser',JSON.stringify(newUser));// Отправка email для подтверждения\nconst response=await fetch('http://localhost:5000/api/send-verification-email',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});if(!response.ok)throw new Error('Ошибка при отправке email.');alert('Письмо с подтверждением отправлено! Проверьте ваш email.');// Переход на страницу подтверждения почты\nsetTimeout(()=>{navigate('/email-verification');},1000);}catch(err){console.error('Ошибка при регистрации:',err);setError('Не удалось отправить письмо. Попробуйте позже.');}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"register-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"register-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"register-text\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"register-title\",children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0439\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0435\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"register-subtext\",children:[\"\\u0414\\u043B\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0432\\u0430\\u043C \\u043D\\u0443\\u0436\\u043D\\u043E \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0435, \\u0438\\u043B\\u0438 \",/*#__PURE__*/_jsx(\"br\",{}),\"\\u0436\\u0435 \\u0432\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0443\\u0436\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0438\\u0439\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"register-form-title\",children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"input-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"example@gmail.com\",className:\"register-input\",required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"input-label password\",children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"A12345678a.\",className:\"register-input\",required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"captcha-container\",children:/*#__PURE__*/_jsx(ReCAPTCHA,{sitekey:\"6LcKH5EqAAAAAH_y5gn5XEGDPB0M328pVx8X5HlW\",onChange:handleCaptchaChange,theme:\"dark\",hl:\"ru\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"register-button\",disabled:isLoading,children:isLoading?'Создание...':'Зарегистрироваться'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"register-result\",children:error&&/*#__PURE__*/_jsx(\"p\",{className:\"register-error\",children:error})}),/*#__PURE__*/_jsxs(\"p\",{className:\"register-opportunity\",children:[\"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\",' ',/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"login\",children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"})]})]})]})});};export default RegisterPage;","map":{"version":3,"names":["React","useState","Link","useNavigate","ReCAPTCHA","jsx","_jsx","jsxs","_jsxs","RegisterPage","_ref","setUser","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","captchaVerified","setCaptchaVerified","navigate","handleCaptchaChange","value","validateEmail","emailRegex","test","validatePassword","passwordRegex","handleSubmit","e","preventDefault","users","JSON","parse","localStorage","getItem","existingUser","find","user","newUser","id","Date","now","push","setItem","stringify","response","fetch","method","headers","body","ok","Error","alert","setTimeout","err","console","className","children","onSubmit","type","onChange","target","placeholder","required","sitekey","theme","hl","disabled","to"],"sources":["C:/Users/Yana/trade pulse live/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport '../styles/RegisterPage.css'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nconst RegisterPage = ({ setUser }) => {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [error, setError] = useState('')\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [captchaVerified, setCaptchaVerified] = useState(false)\r\n\tconst navigate = useNavigate()\r\n\r\n\t// Функция обработки верификации CAPTCHA\r\n\tconst handleCaptchaChange = (value) => {\r\n\t\tif (value) setCaptchaVerified(true)\r\n\t}\r\n\r\n\t// Функция для валидации email\r\n\tconst validateEmail = (email) => {\r\n\t\tconst emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/\r\n\t\treturn emailRegex.test(email)\r\n\t}\r\n\r\n\t// Функция для валидации пароля\r\n\tconst validatePassword = (password) => {\r\n\t\tconst passwordRegex =\r\n\t\t\t/^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/\r\n\t\treturn passwordRegex.test(password)\r\n\t}\r\n\r\n\t// Обработчик отправки формы\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetError('') // Сброс ошибки\r\n\r\n\t\t// Проверка CAPTCHA\r\n\t\tif (!captchaVerified) {\r\n\t\t\tsetError('Пройдите проверку CAPTCHA')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Валидация email и пароля\r\n\t\tif (!validateEmail(email)) {\r\n\t\t\tsetError('Пожалуйста, введите правильный email')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!validatePassword(password)) {\r\n\t\t\tsetError(\r\n\t\t\t\t'Пароль должен содержать минимум 8 символов, включая заглавную букву, цифру и спец. символ'\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true)\r\n\r\n\t\t\t// Получение существующих пользователей\r\n\t\t\tconst users = JSON.parse(localStorage.getItem('users')) || []\r\n\r\n\t\t\t// Проверка существования аккаунта\r\n\t\t\tconst existingUser = users.find((user) => user.email === email)\r\n\t\t\tif (existingUser) {\r\n\t\t\t\tsetError('Этот email уже зарегестрирован. Войдите в свой аккаунт')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Создание нового пользователя\r\n\t\t\tconst newUser = {\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t}\r\n\r\n\t\t\tusers.push(newUser) // Добавление нового пользователя\r\n\t\t\tlocalStorage.setItem('users', JSON.stringify(users)) // Сохранение в localStorage\r\n\r\n\t\t\tsetUser(newUser) // Установка текущего пользователя\r\n\t\t\tlocalStorage.setItem('currentUser', JSON.stringify(newUser))\r\n\r\n\t\t\t// Отправка email для подтверждения\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'http://localhost:5000/api/send-verification-email',\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({ email }),\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tif (!response.ok) throw new Error('Ошибка при отправке email.')\r\n\r\n\t\t\talert('Письмо с подтверждением отправлено! Проверьте ваш email.')\r\n\r\n\t\t\t// Переход на страницу подтверждения почты\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnavigate('/email-verification')\r\n\t\t\t}, 1000)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Ошибка при регистрации:', err)\r\n\t\t\tsetError('Не удалось отправить письмо. Попробуйте позже.')\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='register-page'>\r\n\t\t\t<div className='register-content'>\r\n\t\t\t\t<div className='register-text'>\r\n\t\t\t\t\t<h1 className='register-title'>Создайте новый аккаунт на сайте</h1>\r\n\t\t\t\t\t<p className='register-subtext'>\r\n\t\t\t\t\t\tДля начала вам нужно создать аккаунт на сайте, или <br />\r\n\t\t\t\t\t\tже войти в уже существующий\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='register-form-container'>\r\n\t\t\t\t\t<h2 className='register-form-title'>Регистрация</h2>\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<p className='input-label'>Email</p>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder='example@gmail.com'\r\n\t\t\t\t\t\t\t\tclassName='register-input'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<p className='input-label password'>Пароль</p>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder='A12345678a.'\r\n\t\t\t\t\t\t\t\tclassName='register-input'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className='captcha-container'>\r\n\t\t\t\t\t\t\t<ReCAPTCHA\r\n\t\t\t\t\t\t\t\tsitekey='6LcKH5EqAAAAAH_y5gn5XEGDPB0M328pVx8X5HlW'\r\n\t\t\t\t\t\t\t\tonChange={handleCaptchaChange}\r\n\t\t\t\t\t\t\t\ttheme='dark'\r\n\t\t\t\t\t\t\t\thl='ru'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName='register-button'\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isLoading ? 'Создание...' : 'Зарегистрироваться'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className='register-result'>\r\n\t\t\t\t\t\t{error && <p className='register-error'>{error}</p>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='register-opportunity'>\r\n\t\t\t\t\t\tУже есть аккаунт?{' '}\r\n\t\t\t\t\t\t<Link to='/login' className='login'>\r\n\t\t\t\t\t\t\tВойти\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}