{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yana\\\\trade pules\\\\src\\\\pages\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = ({\n  user,\n  setUser\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser'); // Удаляем текущего пользователя\n    navigate('/'); // Перенаправляем на главную страницу\n  };\n  const handleChangePassword = () => {\n    if (!newPassword.trim()) {\n      setMessage('Пароль не может быть пустым.');\n      return;\n    }\n\n    // Получаем пользователей из localStorage\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Находим и обновляем текущего пользователя\n    const updatedUsers = users.map(u => u.email === user.email ? {\n      ...u,\n      password: newPassword\n    } : u);\n\n    // Сохраняем обновления в localStorage\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n\n    // Обновляем текущего пользователя в памяти\n    const updatedCurrentUser = {\n      ...user,\n      password: newPassword\n    };\n    setUser(updatedCurrentUser);\n    localStorage.setItem('currentUser', JSON.stringify(updatedCurrentUser));\n    setMessage('Пароль успешно обновлен.');\n    setNewPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), \" \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChangePassword,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_s(ProfilePage, \"toD4mL3fH9ssGyPUueJ6XzlFI6U=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ProfilePage","user","setUser","_s","navigate","newPassword","setNewPassword","message","setMessage","handleLogout","localStorage","removeItem","handleChangePassword","trim","users","JSON","parse","getItem","updatedUsers","map","u","email","password","setItem","stringify","updatedCurrentUser","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Yana/trade pules/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ProfilePage = ({ user, setUser }) => {\r\n\tconst navigate = useNavigate()\r\n\tconst [newPassword, setNewPassword] = useState('')\r\n\tconst [message, setMessage] = useState('')\r\n\r\n\tconst handleLogout = () => {\r\n\t\tsetUser(null)\r\n\t\tlocalStorage.removeItem('currentUser') // Удаляем текущего пользователя\r\n\t\tnavigate('/') // Перенаправляем на главную страницу\r\n\t}\r\n\r\n\tconst handleChangePassword = () => {\r\n\t\tif (!newPassword.trim()) {\r\n\t\t\tsetMessage('Пароль не может быть пустым.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Получаем пользователей из localStorage\r\n\t\tconst users = JSON.parse(localStorage.getItem('users')) || []\r\n\r\n\t\t// Находим и обновляем текущего пользователя\r\n\t\tconst updatedUsers = users.map((u) =>\r\n\t\t\tu.email === user.email ? { ...u, password: newPassword } : u\r\n\t\t)\r\n\r\n\t\t// Сохраняем обновления в localStorage\r\n\t\tlocalStorage.setItem('users', JSON.stringify(updatedUsers))\r\n\r\n\t\t// Обновляем текущего пользователя в памяти\r\n\t\tconst updatedCurrentUser = { ...user, password: newPassword }\r\n\t\tsetUser(updatedCurrentUser)\r\n\t\tlocalStorage.setItem('currentUser', JSON.stringify(updatedCurrentUser))\r\n\r\n\t\tsetMessage('Пароль успешно обновлен.')\r\n\t\tsetNewPassword('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Профиль пользователя</h1>\r\n\t\t\t<p>\r\n\t\t\t\t<strong>Email:</strong> {user.email}\r\n\t\t\t</p>\r\n\r\n\t\t\t<h2>Изменить пароль</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tНовый пароль:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='Введите новый пароль'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<button onClick={handleChangePassword}>Сохранить новый пароль</button>\r\n\t\t\t</div>\r\n\t\t\t{message && <p style={{ color: 'green' }}>{message}</p>}\r\n\r\n\t\t\t<br />\r\n\t\t\t<button onClick={handleLogout}>Выйти</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfilePage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}