{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfilePage=_ref=>{let{user,setUser}=_ref;const navigate=useNavigate();const[newPassword,setNewPassword]=useState('');const[message,setMessage]=useState('');const handleLogout=()=>{setUser(null);localStorage.removeItem('currentUser');// Удаляем текущего пользователя\nnavigate('/');// Перенаправляем на главную страницу\n};const handleChangePassword=()=>{if(!newPassword.trim()){setMessage('Пароль не может быть пустым.');return;}// Получаем пользователей из localStorage\nconst users=JSON.parse(localStorage.getItem('users'))||[];// Находим и обновляем текущего пользователя\nconst updatedUsers=users.map(u=>u.email===user.email?{...u,password:newPassword}:u);// Сохраняем обновления в localStorage\nlocalStorage.setItem('users',JSON.stringify(updatedUsers));// Обновляем текущего пользователя в памяти\nconst updatedCurrentUser={...user,password:newPassword};setUser(updatedCurrentUser);localStorage.setItem('currentUser',JSON.stringify(updatedCurrentUser));setMessage('Пароль успешно обновлен.');setNewPassword('');};if(!user){return/*#__PURE__*/_jsx(\"p\",{children:\"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C.\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",user.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"}),\" \",user.password]}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleChangePassword,children:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:message}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"\\u0412\\u044B\\u0439\\u0442\\u0438\"})]});};export default ProfilePage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","ProfilePage","_ref","user","setUser","navigate","newPassword","setNewPassword","message","setMessage","handleLogout","localStorage","removeItem","handleChangePassword","trim","users","JSON","parse","getItem","updatedUsers","map","u","email","password","setItem","stringify","updatedCurrentUser","children","type","value","onChange","e","target","placeholder","onClick","style","color"],"sources":["C:/Users/Yana/trade pules/src/pages/ProfilePage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ProfilePage = ({ user, setUser }) => {\r\n\tconst navigate = useNavigate()\r\n\tconst [newPassword, setNewPassword] = useState('')\r\n\tconst [message, setMessage] = useState('')\r\n\r\n\tconst handleLogout = () => {\r\n\t\tsetUser(null)\r\n\t\tlocalStorage.removeItem('currentUser') // Удаляем текущего пользователя\r\n\t\tnavigate('/') // Перенаправляем на главную страницу\r\n\t}\r\n\r\n\tconst handleChangePassword = () => {\r\n\t\tif (!newPassword.trim()) {\r\n\t\t\tsetMessage('Пароль не может быть пустым.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Получаем пользователей из localStorage\r\n\t\tconst users = JSON.parse(localStorage.getItem('users')) || []\r\n\r\n\t\t// Находим и обновляем текущего пользователя\r\n\t\tconst updatedUsers = users.map((u) =>\r\n\t\t\tu.email === user.email ? { ...u, password: newPassword } : u\r\n\t\t)\r\n\r\n\t\t// Сохраняем обновления в localStorage\r\n\t\tlocalStorage.setItem('users', JSON.stringify(updatedUsers))\r\n\r\n\t\t// Обновляем текущего пользователя в памяти\r\n\t\tconst updatedCurrentUser = { ...user, password: newPassword }\r\n\t\tsetUser(updatedCurrentUser)\r\n\t\tlocalStorage.setItem('currentUser', JSON.stringify(updatedCurrentUser))\r\n\r\n\t\tsetMessage('Пароль успешно обновлен.')\r\n\t\tsetNewPassword('')\r\n\t}\r\n\r\n\tif (!user) {\r\n\t\treturn <p>Пожалуйста, войдите в аккаунт, чтобы просмотреть профиль.</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Профиль пользователя</h1>\r\n\t\t\t<p>\r\n\t\t\t\t<strong>Email:</strong> {user.email}\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<strong>Пароль:</strong> {user.password}\r\n\t\t\t</p>\r\n\r\n\t\t\t<h2>Изменить пароль</h2>\r\n\t\t\t<div>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tНовый пароль:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tvalue={newPassword}\r\n\t\t\t\t\t\tonChange={(e) => setNewPassword(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='Введите новый пароль'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<button onClick={handleChangePassword}>Сохранить новый пароль</button>\r\n\t\t\t</div>\r\n\t\t\t{message && <p style={{ color: 'green' }}>{message}</p>}\r\n\r\n\t\t\t<br />\r\n\t\t\t<button onClick={handleLogout}>Выйти</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfilePage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}