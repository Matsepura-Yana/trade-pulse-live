{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yana\\\\trade pules\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/RegisterPage.css';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = ({\n  setUser\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [captchaVerified, setCaptchaVerified] = useState(false);\n  const navigate = useNavigate();\n\n  // Функция обработки верификации CAPTCHA\n  const handleCaptchaChange = value => {\n    if (value) setCaptchaVerified(true);\n  };\n\n  // Функция для валидации email\n  const validateEmail = email => {\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return emailRegex.test(email);\n  };\n\n  // Функция для валидации пароля\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n    return passwordRegex.test(password);\n  };\n\n  // Обработчик отправки формы\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Сброс ошибки\n\n    // Проверка CAPTCHA\n    if (!captchaVerified) {\n      setError('Пройдите проверку CAPTCHA');\n      return;\n    }\n\n    // Валидация email и пароля\n    if (!validateEmail(email)) {\n      setError('Пожалуйста, введите правильный email');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setError('Пароль должен содержать минимум 8 символов, включая заглавную букву, цифру и спец. символ');\n      return;\n    }\n    try {\n      setIsLoading(true);\n\n      // Получение существующих пользователей\n      const users = JSON.parse(localStorage.getItem('users')) || [];\n\n      // Проверка существования аккаунта\n      const existingUser = users.find(user => user.email === email);\n      if (existingUser) {\n        setError('Этот email уже зарегестрирован. Войдите в свой аккаунт');\n        return;\n      }\n\n      // Создание нового пользователя\n      const newUser = {\n        id: Date.now(),\n        email,\n        password\n      };\n      users.push(newUser); // Добавление нового пользователя\n      localStorage.setItem('users', JSON.stringify(users)); // Сохранение в localStorage\n\n      setUser(newUser); // Установка текущего пользователя\n      localStorage.setItem('currentUser', JSON.stringify(newUser));\n\n      // Отправка email для подтверждения\n      const response = await fetch('http://localhost:5000/api/send-verification-email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) throw new Error('Ошибка при отправке email.');\n      alert('Письмо с подтверждением отправлено! Проверьте ваш email.');\n\n      // Переход на страницу подтверждения почты\n      setTimeout(() => {\n        navigate('/email-verification');\n      }, 1000);\n    } catch (err) {\n      console.error('Ошибка при регистрации:', err);\n      setError('Не удалось отправить письмо. Попробуйте позже.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"register-title\",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0439\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-subtext\",\n          children: [\"\\u0414\\u043B\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u0432\\u0430\\u043C \\u043D\\u0443\\u0436\\u043D\\u043E \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442 \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0435, \\u0438\\u043B\\u0438 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 58\n          }, this), \"\\u0436\\u0435 \\u0432\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0443\\u0436\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0438\\u0439\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"register-form-title\",\n          children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"input-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"example@gmail.com\",\n              className: \"register-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"input-label password\",\n              children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              placeholder: \"A12345678a.\",\n              className: \"register-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"captcha-container\",\n            children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n              sitekey: \"6LcKH5EqAAAAAH_y5gn5XEGDPB0M328pVx8X5HlW\",\n              onChange: handleCaptchaChange,\n              theme: \"dark\",\n              hl: \"ru\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"register-button\",\n            disabled: isLoading,\n            children: isLoading ? 'Создание...' : 'Зарегистрироваться'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-result\",\n          children: error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"register-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-opportunity\",\n          children: [\"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"login\",\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }, this);\n};\n_s(RegisterPage, \"1SCOYwUPWNPha6DuDLp8sW5n61Q=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ReCAPTCHA","jsxDEV","_jsxDEV","RegisterPage","setUser","_s","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","captchaVerified","setCaptchaVerified","navigate","handleCaptchaChange","value","validateEmail","emailRegex","test","validatePassword","passwordRegex","handleSubmit","e","preventDefault","users","JSON","parse","localStorage","getItem","existingUser","find","user","newUser","id","Date","now","push","setItem","stringify","response","fetch","method","headers","body","ok","Error","alert","setTimeout","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","sitekey","theme","hl","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/Yana/trade pules/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport '../styles/RegisterPage.css'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nconst RegisterPage = ({ setUser }) => {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [error, setError] = useState('')\r\n\tconst [isLoading, setIsLoading] = useState(false)\r\n\tconst [captchaVerified, setCaptchaVerified] = useState(false)\r\n\tconst navigate = useNavigate()\r\n\r\n\t// Функция обработки верификации CAPTCHA\r\n\tconst handleCaptchaChange = (value) => {\r\n\t\tif (value) setCaptchaVerified(true)\r\n\t}\r\n\r\n\t// Функция для валидации email\r\n\tconst validateEmail = (email) => {\r\n\t\tconst emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/\r\n\t\treturn emailRegex.test(email)\r\n\t}\r\n\r\n\t// Функция для валидации пароля\r\n\tconst validatePassword = (password) => {\r\n\t\tconst passwordRegex =\r\n\t\t\t/^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/\r\n\t\treturn passwordRegex.test(password)\r\n\t}\r\n\r\n\t// Обработчик отправки формы\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tsetError('') // Сброс ошибки\r\n\r\n\t\t// Проверка CAPTCHA\r\n\t\tif (!captchaVerified) {\r\n\t\t\tsetError('Пройдите проверку CAPTCHA')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Валидация email и пароля\r\n\t\tif (!validateEmail(email)) {\r\n\t\t\tsetError('Пожалуйста, введите правильный email')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!validatePassword(password)) {\r\n\t\t\tsetError(\r\n\t\t\t\t'Пароль должен содержать минимум 8 символов, включая заглавную букву, цифру и спец. символ'\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true)\r\n\r\n\t\t\t// Получение существующих пользователей\r\n\t\t\tconst users = JSON.parse(localStorage.getItem('users')) || []\r\n\r\n\t\t\t// Проверка существования аккаунта\r\n\t\t\tconst existingUser = users.find((user) => user.email === email)\r\n\t\t\tif (existingUser) {\r\n\t\t\t\tsetError('Этот email уже зарегестрирован. Войдите в свой аккаунт')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Создание нового пользователя\r\n\t\t\tconst newUser = {\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t}\r\n\r\n\t\t\tusers.push(newUser) // Добавление нового пользователя\r\n\t\t\tlocalStorage.setItem('users', JSON.stringify(users)) // Сохранение в localStorage\r\n\r\n\t\t\tsetUser(newUser) // Установка текущего пользователя\r\n\t\t\tlocalStorage.setItem('currentUser', JSON.stringify(newUser))\r\n\r\n\t\t\t// Отправка email для подтверждения\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'http://localhost:5000/api/send-verification-email',\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({ email }),\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tif (!response.ok) throw new Error('Ошибка при отправке email.')\r\n\r\n\t\t\talert('Письмо с подтверждением отправлено! Проверьте ваш email.')\r\n\r\n\t\t\t// Переход на страницу подтверждения почты\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tnavigate('/email-verification')\r\n\t\t\t}, 1000)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Ошибка при регистрации:', err)\r\n\t\t\tsetError('Не удалось отправить письмо. Попробуйте позже.')\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='register-page'>\r\n\t\t\t<div className='register-content'>\r\n\t\t\t\t<div className='register-text'>\r\n\t\t\t\t\t<h1 className='register-title'>Создайте новый аккаунт на сайте</h1>\r\n\t\t\t\t\t<p className='register-subtext'>\r\n\t\t\t\t\t\tДля начала вам нужно создать аккаунт на сайте, или <br />\r\n\t\t\t\t\t\tже войти в уже существующий\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='register-form-container'>\r\n\t\t\t\t\t<h2 className='register-form-title'>Регистрация</h2>\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<p className='input-label'>Email</p>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder='example@gmail.com'\r\n\t\t\t\t\t\t\t\tclassName='register-input'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<p className='input-label password'>Пароль</p>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder='A12345678a.'\r\n\t\t\t\t\t\t\t\tclassName='register-input'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className='captcha-container'>\r\n\t\t\t\t\t\t\t<ReCAPTCHA\r\n\t\t\t\t\t\t\t\tsitekey='6LcKH5EqAAAAAH_y5gn5XEGDPB0M328pVx8X5HlW'\r\n\t\t\t\t\t\t\t\tonChange={handleCaptchaChange}\r\n\t\t\t\t\t\t\t\ttheme='dark'\r\n\t\t\t\t\t\t\t\thl='ru'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName='register-button'\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{isLoading ? 'Создание...' : 'Зарегистрироваться'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className='register-result'>\r\n\t\t\t\t\t\t{error && <p className='register-error'>{error}</p>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='register-opportunity'>\r\n\t\t\t\t\t\tУже есть аккаунт?{' '}\r\n\t\t\t\t\t\t<Link to='/login' className='login'>\r\n\t\t\t\t\t\t\tВойти\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}